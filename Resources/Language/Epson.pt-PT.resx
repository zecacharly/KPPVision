<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Not_connected_to_robot" xml:space="preserve">
    <value>Desligado do Robot</value>
  </data>
  <data name="No_operation_running" xml:space="preserve">
    <value>Nenhuma operação a decorrer</value>
  </data>
  <data name="Operation_Started" xml:space="preserve">
    <value>Operação Iniciada</value>
  </data>
  <data name="MSG1" xml:space="preserve">
    <value>Ponto de referencia NOK</value>
  </data>
  <data name="MSG2" xml:space="preserve">
    <value>A mover para primeira posição</value>
  </data>
  <data name="MSG3" xml:space="preserve">
    <value>Espera nova posição do componente</value>
  </data>
  <data name="MSG4" xml:space="preserve">
    <value>A parar o programa de Visão</value>
  </data>
  <data name="MSG5" xml:space="preserve">
    <value>Operação Terminada</value>
  </data>
  <data name="MSG6" xml:space="preserve">
    <value>A definir ponto de referência</value>
  </data>
  <data name="MSG7" xml:space="preserve">
    <value>Ponto de referência ok</value>
  </data>
  <data name="MSG10" xml:space="preserve">
    <value>Posição X NOK</value>
  </data>
  <data name="MSG11" xml:space="preserve">
    <value>Posição Y NOK</value>
  </data>
  <data name="MSG8" xml:space="preserve">
    <value>A iniciar operação</value>
  </data>
  <data name="MSG9" xml:space="preserve">
    <value>A terminar operação</value>
  </data>
  <data name="MSG100" xml:space="preserve">
    <value>A inspecionar</value>
  </data>
  <data name="MSG101" xml:space="preserve">
    <value>Inspeção terminada</value>
  </data>
  <data name="MSG102" xml:space="preserve">
    <value>Espera componente para inspecionar</value>
  </data>
  <data name="MSG103" xml:space="preserve">
    <value>A inspecionar Gear Wheel</value>
  </data>
  <data name="MSG104" xml:space="preserve">
    <value>A processar resultados</value>
  </data>
  <data name="MSG105" xml:space="preserve">
    <value>Inspeção OK</value>
  </data>
  <data name="MSG15" xml:space="preserve">
    <value>A mover para posição de captura</value>
  </data>
  <data name="MSG16" xml:space="preserve">
    <value>A mover para posição de colocaçao</value>
  </data>
  <data name="MSG17" xml:space="preserve">
    <value>A colocar Gear Wheel</value>
  </data>
  <data name="MSG18" xml:space="preserve">
    <value>Colocação terminada</value>
  </data>
  <data name="MSG19" xml:space="preserve">
    <value>A mover para posição do Ring</value>
  </data>
  <data name="MSG20" xml:space="preserve">
    <value>A Capturar Ring</value>
  </data>
  <data name="MSG200" xml:space="preserve">
    <value>Alimentador em funcionamento (Espera componente)</value>
  </data>
  <data name="MSG201" xml:space="preserve">
    <value>Zona de alimentação completa (Em Pausa)</value>
  </data>
  <data name="MSG202" xml:space="preserve">
    <value>Alimentador em Pausa (Visão em inspeção)</value>
  </data>
  <data name="MSG203" xml:space="preserve">
    <value>Alimentador em funcionamento (A encher zona de alimentação)</value>
  </data>
  <data name="MSG21" xml:space="preserve">
    <value>A mover para a zona de colocação do Ring</value>
  </data>
  <data name="MSG22" xml:space="preserve">
    <value>A colocar Ring</value>
  </data>
  <data name="MSG23" xml:space="preserve">
    <value>A esperar nova palete</value>
  </data>
  <data name="dostep" xml:space="preserve">
    <value>A executar novo passo</value>
  </data>
  <data name="maintenancestart" xml:space="preserve">
    <value>Iniciar modo de manutenção</value>
  </data>
  <data name="maintenancestop" xml:space="preserve">
    <value>Parar modo manunteção</value>
  </data>
  <data name="MSG106" xml:space="preserve">
    <value>A abrir pinça Gear Wheels</value>
  </data>
  <data name="MSG107" xml:space="preserve">
    <value>A fechar pinça Gear Wheels</value>
  </data>
  <data name="MSG108" xml:space="preserve">
    <value>Espera próximo passo</value>
  </data>
  <data name="MSG24" xml:space="preserve">
    <value>A capturar Gear Wheel</value>
  </data>
  <data name="waitstep" xml:space="preserve">
    <value>Espera novo passo</value>
  </data>
  <data name="MSG12" xml:space="preserve">
    <value>Angulo NOK</value>
  </data>
  <data name="MSG109" xml:space="preserve">
    <value>Falta ar comprimido</value>
  </data>
  <data name="MSG110" xml:space="preserve">
    <value>Alimentador vazio</value>
  </data>
  <data name="confirm_save_pts_cap" xml:space="preserve">
    <value>Confirmar opção</value>
  </data>
  <data name="confirm_save_pts_txt" xml:space="preserve">
    <value>Salvar ponto?</value>
  </data>
  <data name="MSG25" xml:space="preserve">
    <value>Espera virador em baixo</value>
  </data>
  <data name="MSG26" xml:space="preserve">
    <value>A inspecionar blister</value>
  </data>
  <data name="MSG13" xml:space="preserve">
    <value>Erro ao obter resultados dos RINGS</value>
  </data>
  <data name="MSG111" xml:space="preserve">
    <value>A inspecionar Rings</value>
  </data>
  <data name="MSG50" xml:space="preserve">
    <value>Espera colocação de novo blister</value>
  </data>
  <data name="MSG51" xml:space="preserve">
    <value>Espera palete de Ring em posição</value>
  </data>
  <data name="MSG301" xml:space="preserve">
    <value>Erro sensor garra RINGS em cima</value>
  </data>
  <data name="MSG302" xml:space="preserve">
    <value>Erro sensor garra GEAR WHEELS aberta</value>
  </data>
  <data name="MSG303" xml:space="preserve">
    <value>Erro sensor garra GEAR WHEELS fechada</value>
  </data>
  <data name="MSG304" xml:space="preserve">
    <value>Erro sensor garra RINGS em baixo</value>
  </data>
  <data name="MSG305" xml:space="preserve">
    <value>Erro sensor garra RING fechada</value>
  </data>
  <data name="MSG306" xml:space="preserve">
    <value>Erro sensor garra RING aberta</value>
  </data>
  <data name="__btStopStopped" xml:space="preserve">
    <value>Parar</value>
  </data>
  <data name="__btStopStopping" xml:space="preserve">
    <value>Em paragem</value>
  </data>
  <data name="pedido_man_remota_cap" xml:space="preserve">
    <value>Pedido de Manutenção remota</value>
  </data>
  <data name="pedido_man_remota_txt" xml:space="preserve">
    <value>Aceitar pedido?</value>
  </data>
</root>